{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qdynamic type system, best-effort type inference and checking; goal is to provide useful suggestions; theoretical soundness non-goal\nbasic bottom-up typechecker\nloose assignability: we check whether it is possible that the types can work out correctly, not that they work out correctly in all cases\neg consider function \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; we do not report an error on a call of \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q with argument type \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; it is possible that in this particular branch the caller ensures that the argument type is always \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q but the typechecker is not sufficiently smart to reason it out\nfunction calls\ntypecheck output for lsp\nneed to be able to figure out type of arbitrary expression\njust store map of ast::Expr.syntaxnodeptr -> Ty\nneed to be able to show doc for function\neasy\nneed to be able to show doc for field/method/func\nfields/methods: store map of ast::Field.syntaxnodeptr -> FieldOrMethod\nneed to be able to suggest\nvariables (easy)\nfunctions\nfields/methods on base expr\nfunction option keys AND nested in sdict (latter might be yucky).\\E$"}
